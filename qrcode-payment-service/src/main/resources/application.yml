eureka:
  client:
    serviceUrl:
      defaultZone: https://${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka/
    healthcheck:
      enabled: true
  instance:
    secure-port-enabled: true
    non-secure-port-enabled: false
    hostname: ${EUREKA_HOST:localhost}

spring:
  application:
    name: ${QRCODE_SERVICE_NAME:qrcode-payment-service}
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DBB_NAME:psp-qrcode}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:admin}
  jpa:
    database: postgresql
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL95Dialect
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
    show-sql: true
    generate-ddl: true
  sql:
    init:
      mode: always
  zipkin:
    baseUrl: http://${ZIPKIN_HOST:localhost}:${ZIPKIN_PORT:9411}/
  sleuth:
    sampler:
      probability: 1

server:
  port: ${QRCODE_SERVICE_PORT:8098}
  ssl:
    enabled: true
    key-store-type: PKCS12
    key-store: classpath:qrcode-payment-service.keystore.p12
    key-store-password: password
    key-alias: qrcode-payment-service
    trust-store: classpath:truststore.p12
    trust-store-password: password
    trust-store-type: PKCS12
  error:
    include-message: always
    include-binding-errors: always

service:
  auth:
    name: ${AUTH_SERVICE_NAME:auth-service}
  payment-request:
    name: ${PAYMENT_REQUEST_SERVICE_NAME:payment-request-service}
  store:
    name: ${STORE_SERVICE_NAME:store-service}

encryption:
  key: ${ENCRYPTION_KEY:BWFIFBWEO47329BN}